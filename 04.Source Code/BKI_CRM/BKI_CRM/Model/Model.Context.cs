//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BKI_CRM.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BKI_CRMEntities : DbContext
    {
        public BKI_CRMEntities()
            : base("name=BKI_CRMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CM_DM_LOAI_TD> CM_DM_LOAI_TD { get; set; }
        public DbSet<CM_DM_TU_DIEN> CM_DM_TU_DIEN { get; set; }
        public DbSet<DM_ACTION> DM_ACTION { get; set; }
        public DbSet<DM_CHUYEN_TRANG_THAI> DM_CHUYEN_TRANG_THAI { get; set; }
        public DbSet<DM_CONG_TY> DM_CONG_TY { get; set; }
        public DbSet<DM_KHACH_HANG> DM_KHACH_HANG { get; set; }
        public DbSet<DM_NHOM_SAN_PHAM> DM_NHOM_SAN_PHAM { get; set; }
        public DbSet<DM_PHONG_BAN> DM_PHONG_BAN { get; set; }
        public DbSet<DM_SAN_PHAM> DM_SAN_PHAM { get; set; }
        public DbSet<DM_TRANG_THAI> DM_TRANG_THAI { get; set; }
        public DbSet<DM_YEU_CAU_TRANG_THAI> DM_YEU_CAU_TRANG_THAI { get; set; }
        public DbSet<GD_ACTION> GD_ACTION { get; set; }
        public DbSet<GD_PHIEN_LAM_VIEC> GD_PHIEN_LAM_VIEC { get; set; }
        public DbSet<HT_ACTION> HT_ACTION { get; set; }
        public DbSet<HT_CONTROLLER> HT_CONTROLLER { get; set; }
        public DbSet<HT_LOG> HT_LOG { get; set; }
        public DbSet<HT_PHAN_QUYEN_CHO_NHOM> HT_PHAN_QUYEN_CHO_NHOM { get; set; }
        public DbSet<HT_USER> HT_USER { get; set; }
        public DbSet<HT_USER_GROUP> HT_USER_GROUP { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<DOC_COLUMN_COMMENT> DOC_COLUMN_COMMENT { get; set; }
        public DbSet<DOC_TABLE_COMMENT> DOC_TABLE_COMMENT { get; set; }
        public DbSet<V_DM_NHAN_VIEN_CONG_TY> V_DM_NHAN_VIEN_CONG_TY { get; set; }
        public DbSet<V_HT_PHAN_QUYEN_CHI_TIET> V_HT_PHAN_QUYEN_CHI_TIET { get; set; }
        public DbSet<V_HT_USER> V_HT_USER { get; set; }
        public DbSet<V_RPT_LUY_KE> V_RPT_LUY_KE { get; set; }
        public DbSet<V_RPT_PHAT_SINH_TRONG_THANG> V_RPT_PHAT_SINH_TRONG_THANG { get; set; }
        public DbSet<V_TU_DIEN> V_TU_DIEN { get; set; }
        public DbSet<GD_CHUYEN_TRANG_THAI> GD_CHUYEN_TRANG_THAI { get; set; }
        public DbSet<GD_THONG_TIN_HOP_DONG> GD_THONG_TIN_HOP_DONG { get; set; }
        public DbSet<GD_NGUOI_QUAN_LY_KHACH_HANG> GD_NGUOI_QUAN_LY_KHACH_HANG { get; set; }
        public DbSet<V_DM_YEU_CAU_TRANG_THAI> V_DM_YEU_CAU_TRANG_THAI { get; set; }
        public DbSet<V_GD_CHUYEN_TRANG_THAI> V_GD_CHUYEN_TRANG_THAI { get; set; }
        public DbSet<V_GD_KHACH_HANG_CHUYEN_TRANG_THAI> V_GD_KHACH_HANG_CHUYEN_TRANG_THAI { get; set; }
        public DbSet<V_GD_NGUOI_QUAN_LY_KHACH_HANG> V_GD_NGUOI_QUAN_LY_KHACH_HANG { get; set; }
        public DbSet<V_NHAN_VIEN_QUAN_LY_KHACH_HANG> V_NHAN_VIEN_QUAN_LY_KHACH_HANG { get; set; }
        public DbSet<V_GD_LICH_SU_KHACH_HANG> V_GD_LICH_SU_KHACH_HANG { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int DOC_COMMENT_column(string table_name, string column_name, string comment)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            var column_nameParameter = column_name != null ?
                new ObjectParameter("column_name", column_name) :
                new ObjectParameter("column_name", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DOC_COMMENT_column", table_nameParameter, column_nameParameter, commentParameter);
        }
    
        public virtual int DOC_COMMENT_TABLE(string table_name, string comment)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DOC_COMMENT_TABLE", table_nameParameter, commentParameter);
        }
    
        public virtual int doc_reconcile_columns(string table_name)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("doc_reconcile_columns", table_nameParameter);
        }
    
        public virtual int doc_reconcile_tables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("doc_reconcile_tables");
        }
    }
}
